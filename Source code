import pygame
import sys
import random
import os
# Initialize Pygame
pygame.init() 
print ("Shake Gane By Kaidra1")
# Constants
WIDTH, HEIGHT = 1600, 900
GRID_SIZE = 20
FPS = 20

# Colors
BLACK = (0, 0, 0)
WHITE = (242, 91, 80)
RED = (255, 0, 0)
GREEN = (0, 255, 0)

# Snake class
class Snake:
    def __init__(self):
        self.body = [(100, 100), (90, 100), (80, 100)]
        self.direction = (GRID_SIZE, 0)

    def move(self):
        head = (self.body[0][0] + self.direction[0], self.body[0][1] + self.direction[1])
        self.body.insert(0, head)
        if len(self.body) > 1:
            self.body.pop()
	
    def change_direction(self, new_direction):
        if (new_direction[0] != -self.direction[0]) or (new_direction[1] != -self.direction[1]):
            self.direction = new_direction

    def check_collision(self):
        return (
            self.body[0] in self.body[1:] or
            self.body[0][0] < 0 or
            self.body[0][0] >= WIDTH or
            self.body[0][1] < 0 or
            self.body[0][1] >= HEIGHT
        )

    def check_food_collision(self, food):
        return self.body[0] == food

# Food class
class Food:
    def __init__(self):
        self.position = self.generate_food_position()

    def generate_food_position(self):
        x = random.randrange(0, WIDTH, GRID_SIZE)
        y = random.randrange(0, HEIGHT, GRID_SIZE)
        return x, y

    def draw(self, surface):
        pygame.draw.rect(surface, GREEN, (self.position[0], self.position[1], GRID_SIZE, GRID_SIZE))

# Game function
def run_game():
    snake = Snake()
    food = Food()
    # Pygame setup
    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    pygame.display.set_caption("Snake Game")
    clock = pygame.time.Clock()

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()  
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_UP:
                    snake.change_direction((0, -GRID_SIZE))
                elif event.key == pygame.K_DOWN:
                    snake.change_direction((0, GRID_SIZE))
                elif event.key == pygame.K_LEFT:
                    snake.change_direction((-GRID_SIZE, 0))
                elif event.key == pygame.K_RIGHT:
                    snake.change_direction((GRID_SIZE, 0))

        snake.move()

        if snake.check_food_collision(food.position):
            snake.body.append((-1, -1))  # Dummy tail segment
            food.position = food.generate_food_position()

        if snake.check_collision():
            pygame.quit()
            sys.exit()

        # Draw everything
        screen.fill(BLACK)
        snake_rects = [pygame.Rect(x, y, GRID_SIZE, GRID_SIZE) for x, y in snake.body]
        pygame.draw.rect(screen, RED, snake_rects[0])
        for rect in snake_rects[1:]:
            pygame.draw.rect(screen, WHITE, rect)

        food.draw(screen)

        pygame.display.flip()
        clock.tick(FPS)

if __name__ == "__main__":
    run_game()
